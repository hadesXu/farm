<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hades.farm.core.data.mapper.TEggWarehouseMapper" >
  <resultMap id="BaseResultMap" type="com.hades.farm.core.data.entity.TEggWarehouse" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <constructor >
      <idArg column="id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="user_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="egg" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="egg_doing" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="duck" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="duck_freeze" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="duck_harvest" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="if_hot" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="if_harvest" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="if_steal" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="all_sell" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="all_profit" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="all_integral" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="add_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, user_id, egg, egg_doing, duck, duck_freeze, duck_harvest, if_hot, if_harvest, 
    if_steal, all_sell, all_profit, all_integral, add_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_egg_warehouse
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_egg_warehouse
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hades.farm.core.data.entity.TEggWarehouse" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_egg_warehouse (id, user_id, egg, 
      egg_doing, duck, duck_freeze, 
      duck_harvest, if_hot, if_harvest, 
      if_steal, all_sell, all_profit, 
      all_integral, add_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{egg,jdbcType=INTEGER}, 
      #{eggDoing,jdbcType=INTEGER}, #{duck,jdbcType=INTEGER}, #{duckFreeze,jdbcType=INTEGER}, 
      #{duckHarvest,jdbcType=INTEGER}, #{ifHot,jdbcType=INTEGER}, #{ifHarvest,jdbcType=INTEGER}, 
      #{ifSteal,jdbcType=INTEGER}, #{allSell,jdbcType=INTEGER}, #{allProfit,jdbcType=DECIMAL}, 
      #{allIntegral,jdbcType=DECIMAL}, #{addTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hades.farm.core.data.entity.TEggWarehouse" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_egg_warehouse
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="egg != null" >
        egg,
      </if>
      <if test="eggDoing != null" >
        egg_doing,
      </if>
      <if test="duck != null" >
        duck,
      </if>
      <if test="duckFreeze != null" >
        duck_freeze,
      </if>
      <if test="duckHarvest != null" >
        duck_harvest,
      </if>
      <if test="ifHot != null" >
        if_hot,
      </if>
      <if test="ifHarvest != null" >
        if_harvest,
      </if>
      <if test="ifSteal != null" >
        if_steal,
      </if>
      <if test="allSell != null" >
        all_sell,
      </if>
      <if test="allProfit != null" >
        all_profit,
      </if>
      <if test="allIntegral != null" >
        all_integral,
      </if>
      <if test="addTime != null" >
        add_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="egg != null" >
        #{egg,jdbcType=INTEGER},
      </if>
      <if test="eggDoing != null" >
        #{eggDoing,jdbcType=INTEGER},
      </if>
      <if test="duck != null" >
        #{duck,jdbcType=INTEGER},
      </if>
      <if test="duckFreeze != null" >
        #{duckFreeze,jdbcType=INTEGER},
      </if>
      <if test="duckHarvest != null" >
        #{duckHarvest,jdbcType=INTEGER},
      </if>
      <if test="ifHot != null" >
        #{ifHot,jdbcType=INTEGER},
      </if>
      <if test="ifHarvest != null" >
        #{ifHarvest,jdbcType=INTEGER},
      </if>
      <if test="ifSteal != null" >
        #{ifSteal,jdbcType=INTEGER},
      </if>
      <if test="allSell != null" >
        #{allSell,jdbcType=INTEGER},
      </if>
      <if test="allProfit != null" >
        #{allProfit,jdbcType=DECIMAL},
      </if>
      <if test="allIntegral != null" >
        #{allIntegral,jdbcType=DECIMAL},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hades.farm.core.data.entity.TEggWarehouse" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_egg_warehouse
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="egg != null" >
        egg = #{egg,jdbcType=INTEGER},
      </if>
      <if test="eggDoing != null" >
        egg_doing = #{eggDoing,jdbcType=INTEGER},
      </if>
      <if test="duck != null" >
        duck = #{duck,jdbcType=INTEGER},
      </if>
      <if test="duckFreeze != null" >
        duck_freeze = #{duckFreeze,jdbcType=INTEGER},
      </if>
      <if test="duckHarvest != null" >
        duck_harvest = #{duckHarvest,jdbcType=INTEGER},
      </if>
      <if test="ifHot != null" >
        if_hot = #{ifHot,jdbcType=INTEGER},
      </if>
      <if test="ifHarvest != null" >
        if_harvest = #{ifHarvest,jdbcType=INTEGER},
      </if>
      <if test="ifSteal != null" >
        if_steal = #{ifSteal,jdbcType=INTEGER},
      </if>
      <if test="allSell != null" >
        all_sell = #{allSell,jdbcType=INTEGER},
      </if>
      <if test="allProfit != null" >
        all_profit = #{allProfit,jdbcType=DECIMAL},
      </if>
      <if test="allIntegral != null" >
        all_integral = #{allIntegral,jdbcType=DECIMAL},
      </if>
      <if test="addTime != null" >
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hades.farm.core.data.entity.TEggWarehouse" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_egg_warehouse
    set user_id = #{userId,jdbcType=BIGINT},
      egg = #{egg,jdbcType=INTEGER},
      egg_doing = #{eggDoing,jdbcType=INTEGER},
      duck = #{duck,jdbcType=INTEGER},
      duck_freeze = #{duckFreeze,jdbcType=INTEGER},
      duck_harvest = #{duckHarvest,jdbcType=INTEGER},
      if_hot = #{ifHot,jdbcType=INTEGER},
      if_harvest = #{ifHarvest,jdbcType=INTEGER},
      if_steal = #{ifSteal,jdbcType=INTEGER},
      all_sell = #{allSell,jdbcType=INTEGER},
      all_profit = #{allProfit,jdbcType=DECIMAL},
      all_integral = #{allIntegral,jdbcType=DECIMAL},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from t_egg_warehouse
    where user_id = #{userId,jdbcType=BIGINT}
  </select>

  <update id="updateEggWareHouseBreedingEgg" parameterType="com.hades.farm.core.data.dto.requestDto.BreedingRequestDto" >
      UPDATE t_egg_warehouse
      SET egg = egg - #{num,jdbcType=INTEGER},
      update_time = now()
      where user_id = #{userId,jdbcType=BIGINT}
      and egg &gt;=#{num,jdbcType=INTEGER}
  </update>

  <update id="updateEggWareHouseBuyDuck" parameterType="com.hades.farm.core.data.dto.requestDto.BuyGoodsRequestDto" >
    UPDATE t_egg_warehouse
    SET egg = egg + #{num,jdbcType=INTEGER},
    update_time = now()
    where user_id = #{userId,jdbcType=BIGINT}
  </update>


</mapper>