<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hades.farm.core.data.mapper.TEggBreedingMapper">
  <resultMap id="BaseResultMap" type="com.hades.farm.core.data.entity.TEggBreeding">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="user_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="num" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="num_harvest" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="day" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="acc_no_hot" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="status" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="add_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, user_id userId, num, num_harvest numHarvest, day, acc_no_hot accNoHot, status, add_time addTime, update_time updateTime,
    num_freeze numFreeze,produce
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_egg_breeding
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_egg_breeding
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hades.farm.core.data.entity.TEggBreeding">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_egg_breeding (id, user_id, num, 
      num_harvest, day, acc_no_hot, 
      status, add_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{num,jdbcType=INTEGER}, 
      #{numHarvest,jdbcType=INTEGER}, #{day,jdbcType=INTEGER}, #{accNoHot,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{addTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hades.farm.core.data.entity.TEggBreeding">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_egg_breeding
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="numHarvest != null">
        num_harvest,
      </if>
      <if test="day != null">
        day,
      </if>
      <if test="accNoHot != null">
        acc_no_hot,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="numHarvest != null">
        #{numHarvest,jdbcType=INTEGER},
      </if>
      <if test="day != null">
        #{day,jdbcType=INTEGER},
      </if>
      <if test="accNoHot != null">
        #{accNoHot,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hades.farm.core.data.entity.TEggBreeding">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_egg_breeding
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="numHarvest != null">
        num_harvest = #{numHarvest,jdbcType=INTEGER},
      </if>
      <if test="day != null">
        day = #{day,jdbcType=INTEGER},
      </if>
      <if test="accNoHot != null">
        acc_no_hot = #{accNoHot,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hades.farm.core.data.entity.TEggBreeding">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_egg_breeding
    set user_id = #{userId,jdbcType=BIGINT},
      num = #{num,jdbcType=INTEGER},
      num_harvest = #{numHarvest,jdbcType=INTEGER},
      day = #{day,jdbcType=INTEGER},
      acc_no_hot = #{accNoHot,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="getEggBreedingByUserId" resultType="com.hades.farm.core.data.entity.TEggBreeding"
          parameterType="java.lang.Long">
    SELECT
    *
    FROM `t_egg_breeding`
    WHERE user_id=#{userId}
  </select>

  <select id="queryHaveBreed" parameterType="map" resultType="map" >
    select sum(num) as sumNum from  t_egg_breeding  where  user_id = #{user_id,jdbcType=BIGINT}
    and add_time >= #{startTime,jdbcType=TIMESTAMP}
    and #{endTime,jdbcType=TIMESTAMP} >= add_time
  </select>

  <select id="queryBreedingList" parameterType="long" resultType="com.hades.farm.core.data.entity.TEggBreeding">
       select <include refid="Base_Column_List" />
    from t_egg_breeding
    where user_id = user_id=#{userId}
    and status = 1
  </select>

  <select id="queryBreeList"  resultType="map">
      select num,day,num_harvest,add_time,'1' as ty from t_egg_breeding where user_id =#{0} and status = '1'
      UNION ALL
      select num,day,num_harvest,add_time,'2' as ty from t_duck_breeding where user_id =#{0} and status = '1'
      order by add_time desc
       LIMIT #{1},#{2}
  </select>

  <select id="queryCanStealNum" parameterType="long" resultType="int">
    SELECT SUM(produce DIV 5) produce FROM t_egg_breeding
    WHERE user_id = #{userId,jdbcType=BIGINT}
    AND STATUS IN(1,2) AND produce > 0
  </select>

  <update id="updateOfStealByOther" >
    update  t_egg_breeding set produce = produce - (produce DIV 5),
    update_time = NOW()
    WHERE user_id = #{userId,jdbcType=BIGINT}
    AND STATUS IN(1,2) AND produce > 0
  </update>

  <select id="queryCanHarvestList" parameterType="long" resultType="com.hades.farm.core.data.dto.resultDto.HarvestResultDto">
    SELECT produce,STATUS,num_freeze numFreeze FROM t_egg_breeding WHERE user_id = #{userId,jdbcType=BIGINT}
    AND ((STATUS =1 AND produce > 0) OR  (STATUS =2 AND (produce > 0 OR num_freeze >0)))
  </select>

  <update id="harvestOfDoing" parameterType="long">
    update t_egg_breeding set num_freeze = num_freeze + produce,
    produce = 0,update_time = NOW()
    where user_id = #{userId,jdbcType=BIGINT} and STATUS =1 AND produce > 0
  </update>

  <update id="harvestOfDone" parameterType="long">
    update t_egg_breeding set num_freeze = 0,
    produce = 0,update_time = NOW()
    where user_id = #{userId,jdbcType=BIGINT} and  STATUS =2 AND (produce > 0 or num_freeze>0)
  </update>

  <select id="queryHarvestFreeze" parameterType="long" resultType="int">
         SELECT IFNULL(SUM(num_freeze),0) FROM t_egg_breeding
         WHERE user_id = #{userId,jdbcType=BIGINT}
         and STATUS IN(1,2)
  </select>

  <select id="queryHarvestNum" parameterType="long" resultType="int">
    SELECT IFNULL(SUM(num_harvest),0) FROM t_egg_breeding
    WHERE user_id = #{userId,jdbcType=BIGINT} AND STATUS = 1
  </select>


</mapper>