<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hades.farm.core.data.mapper.TDuckWarehouseMapper" >
  <resultMap id="BaseResultMap" type="com.hades.farm.core.data.entity.TDuckWarehouse" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <constructor >
      <idArg column="id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="user_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="duck" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="duck_doing" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="egg" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="egg_freeze" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="egg_harvest" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="if_harvest" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="if_steal" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="all_sell" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="all_profit" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="all_integral" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="food" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="add_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, user_id, duck, duck_doing, egg, egg_freeze, egg_harvest, if_harvest, if_steal, 
    all_sell, all_profit, all_integral, food, add_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_duck_warehouse
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_duck_warehouse
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hades.farm.core.data.entity.TDuckWarehouse" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_duck_warehouse (id, user_id, duck, 
      duck_doing, egg, egg_freeze, 
      egg_harvest, if_harvest, if_steal, 
      all_sell, all_profit, all_integral, 
      food, add_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{duck,jdbcType=INTEGER}, 
      #{duckDoing,jdbcType=INTEGER}, #{egg,jdbcType=INTEGER}, #{eggFreeze,jdbcType=INTEGER}, 
      #{eggHarvest,jdbcType=INTEGER}, #{ifHarvest,jdbcType=INTEGER}, #{ifSteal,jdbcType=INTEGER}, 
      #{allSell,jdbcType=INTEGER}, #{allProfit,jdbcType=DECIMAL}, #{allIntegral,jdbcType=DECIMAL}, 
      #{food,jdbcType=INTEGER}, #{addTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hades.farm.core.data.entity.TDuckWarehouse" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_duck_warehouse
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="duck != null" >
        duck,
      </if>
      <if test="duckDoing != null" >
        duck_doing,
      </if>
      <if test="egg != null" >
        egg,
      </if>
      <if test="eggFreeze != null" >
        egg_freeze,
      </if>
      <if test="eggHarvest != null" >
        egg_harvest,
      </if>
      <if test="ifHarvest != null" >
        if_harvest,
      </if>
      <if test="ifSteal != null" >
        if_steal,
      </if>
      <if test="allSell != null" >
        all_sell,
      </if>
      <if test="allProfit != null" >
        all_profit,
      </if>
      <if test="allIntegral != null" >
        all_integral,
      </if>
      <if test="food != null" >
        food,
      </if>
      <if test="addTime != null" >
        add_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="duck != null" >
        #{duck,jdbcType=INTEGER},
      </if>
      <if test="duckDoing != null" >
        #{duckDoing,jdbcType=INTEGER},
      </if>
      <if test="egg != null" >
        #{egg,jdbcType=INTEGER},
      </if>
      <if test="eggFreeze != null" >
        #{eggFreeze,jdbcType=INTEGER},
      </if>
      <if test="eggHarvest != null" >
        #{eggHarvest,jdbcType=INTEGER},
      </if>
      <if test="ifHarvest != null" >
        #{ifHarvest,jdbcType=INTEGER},
      </if>
      <if test="ifSteal != null" >
        #{ifSteal,jdbcType=INTEGER},
      </if>
      <if test="allSell != null" >
        #{allSell,jdbcType=INTEGER},
      </if>
      <if test="allProfit != null" >
        #{allProfit,jdbcType=DECIMAL},
      </if>
      <if test="allIntegral != null" >
        #{allIntegral,jdbcType=DECIMAL},
      </if>
      <if test="food != null" >
        #{food,jdbcType=INTEGER},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hades.farm.core.data.entity.TDuckWarehouse" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_duck_warehouse
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="duck != null" >
        duck = #{duck,jdbcType=INTEGER},
      </if>
      <if test="duckDoing != null" >
        duck_doing = #{duckDoing,jdbcType=INTEGER},
      </if>
      <if test="egg != null" >
        egg = #{egg,jdbcType=INTEGER},
      </if>
      <if test="eggFreeze != null" >
        egg_freeze = #{eggFreeze,jdbcType=INTEGER},
      </if>
      <if test="eggHarvest != null" >
        egg_harvest = #{eggHarvest,jdbcType=INTEGER},
      </if>
      <if test="ifHarvest != null" >
        if_harvest = #{ifHarvest,jdbcType=INTEGER},
      </if>
      <if test="ifSteal != null" >
        if_steal = #{ifSteal,jdbcType=INTEGER},
      </if>
      <if test="allSell != null" >
        all_sell = #{allSell,jdbcType=INTEGER},
      </if>
      <if test="allProfit != null" >
        all_profit = #{allProfit,jdbcType=DECIMAL},
      </if>
      <if test="allIntegral != null" >
        all_integral = #{allIntegral,jdbcType=DECIMAL},
      </if>
      <if test="food != null" >
        food = #{food,jdbcType=INTEGER},
      </if>
      <if test="addTime != null" >
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hades.farm.core.data.entity.TDuckWarehouse" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_duck_warehouse
    set user_id = #{userId,jdbcType=BIGINT},
      duck = #{duck,jdbcType=INTEGER},
      duck_doing = #{duckDoing,jdbcType=INTEGER},
      egg = #{egg,jdbcType=INTEGER},
      egg_freeze = #{eggFreeze,jdbcType=INTEGER},
      egg_harvest = #{eggHarvest,jdbcType=INTEGER},
      if_harvest = #{ifHarvest,jdbcType=INTEGER},
      if_steal = #{ifSteal,jdbcType=INTEGER},
      all_sell = #{allSell,jdbcType=INTEGER},
      all_profit = #{allProfit,jdbcType=DECIMAL},
      all_integral = #{allIntegral,jdbcType=DECIMAL},
      food = #{food,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>


  <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from t_duck_warehouse
    where user_id = #{userId,jdbcType=BIGINT}
  </select>

  <update id="updateDuckWareHouseBreedingDuck" parameterType="com.hades.farm.core.data.dto.requestDto.BreedingRequestDto" >
    UPDATE t_duck_warehouse
    SET duck = duck - #{num,jdbcType=INTEGER},
    duck_doing = duck_doing+#{num,jdbcType=INTEGER},
    update_time = now()
    where user_id = #{userId,jdbcType=BIGINT}
    and duck &gt;=#{num,jdbcType=INTEGER}
  </update>


  <update id="updateDuckWareHouseBuyDuck" parameterType="com.hades.farm.core.data.dto.requestDto.BuyGoodsRequestDto" >
    UPDATE t_duck_warehouse
    SET duck = duck + #{num,jdbcType=INTEGER},
    update_time = now()
    where user_id = #{userId,jdbcType=BIGINT}
  </update>

  <update id="updateDuckWareHouseBuyFeed" parameterType="com.hades.farm.core.data.dto.requestDto.BuyGoodsRequestDto" >
    UPDATE t_duck_warehouse
    SET food = food + #{feedNum,jdbcType=INTEGER},
    update_time = now()
    where user_id = #{userId,jdbcType=BIGINT}
  </update>


  <update id="updateDuckWareHouseSellEgg" parameterType="com.hades.farm.core.data.dto.requestDto.PublishOrderRequestDto" >
    UPDATE t_duck_warehouse
    SET egg = egg - #{num,jdbcType=INTEGER},
    update_time = now()
    where user_id = #{userId,jdbcType=BIGINT}
    and egg &gt;=#{num,jdbcType=INTEGER}
  </update>

  <update id="updateDuckWareHouseOfFeeding" parameterType="com.hades.farm.core.data.dto.requestDto.UpdateDuckWareHouseFeedingRequestDto" >
    UPDATE t_duck_warehouse
    SET food = food - #{feedNum,jdbcType=INTEGER},
    update_time = now()
    where user_id = #{userId,jdbcType=BIGINT}
    and food &gt;= #{feedNum,jdbcType=INTEGER}
  </update>

  <!--  更新累计数据 -->
  <update id="updateDuckWareHouseCumulativeData" parameterType="com.hades.farm.core.data.dto.requestDto.WareHouseCumulativeDataRequestDto">
    UPDATE t_duck_warehouse
    set all_sell = all_sell + #{allSell,jdbcType=INTEGER},
    all_profit = #{allProfit,jdbcType=DECIMAL},
    all_integral = #{allIntegral,jdbcType=DECIMAL},
    update_time = now()
    where user_id = #{userId,jdbcType=BIGINT}
  </update>

  <select id="queryCanStealList" resultType="com.hades.farm.api.view.response.StealModel" >
      SELECT td.user_id userId,tu.name,tu.img_url imgUrl,
     td.egg_harvest harvestNum,0 canStealNum
      FROM t_duck_warehouse td LEFT JOIN t_user tu ON td.user_id = tu.id
    WHERE
    egg_harvest >0
    AND if_steal = 1
    AND user_id!= #{userId,jdbcType=BIGINT}
    order by egg_harvest desc
    LIMIT #{offSet},#{pageSize}
  </select>

  <update id="updateOfStealByOther" >
     UPDATE t_duck_warehouse
     SET if_steal = 2,
     update_time = NOW(),
     egg_harvest = egg_harvest - #{stealNum,jdbcType=INTEGER}
     where user_id = #{userId,jdbcType=BIGINT}
     and if_steal = 1
     and egg_harvest &gt;= #{stealNum,jdbcType=INTEGER}
  </update>

  <update id="updateOfStealOther" >
    UPDATE t_duck_warehouse set
    update_time = NOW(),
    egg = egg + #{stealNum,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>


</mapper>