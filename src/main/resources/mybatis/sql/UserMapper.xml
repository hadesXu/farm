<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hades.farm.core.data.mapper.UserMapper">

    <resultMap id="user" type="User">
        <id property="id" column="id"/>
        <result property="telephone" column="telephone"/>
        <result property="name" column="name"/>
        <result property="password" column="password"/>
        <result property="wechat" column="wechat"/>
        <result property="parentId" column="parent_id"/>
        <result property="parents" column="parents"/>
        <result property="isGroup" column="is_group"/>
        <result property="generation" column="generation"/>
        <result property="groupBossId" column="group_boss_id"/>
        <result property="grade" column="grade"/>
        <result property="isTrainee" column="is_trainee"/>
        <result property="sEgg" column="s_egg"/>
        <result property="sDuck" column="s_duck"/>
        <result property="active" column="active"/>
        <result property="imgUrl" column="img_url"/>
        <result property="qrCode" column="qr_code"/>
        <result property="addTime" column="add_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="user_columns">
        id,telephone,name,password,wechat,parent_id,parents,grade,is_trainee isTrainee,s_egg sEgg,s_duck sDuck,
        active,img_url imgUrl,qr_code qrCode,add_time addTime,update_time updateTime,dog_end_day dogEndDay,robot_end_day robotEndDay
    </sql>

    <insert id="insert" parameterType="com.hades.farm.core.data.entity.User" useGeneratedKeys="true"
            keyProperty="id">
        insert into t_user ( id,telephone,name,password,wechat,parent_id,parents,grade,is_trainee,
        s_egg,s_duck, active,img_url,qr_code,add_time,update_time)
        values (#{id},#{telephone},#{name},#{password},#{wechat},#{parentId},#{parents},#{grade},#{isTrainee},
        #{sEgg},#{sDuck},#{active},#{imgUrl},#{qrCode},#{addTime},#{updateTime})
    </insert>

    <select id="getUserById" resultMap="user">
        SELECT
        <include refid="user_columns"></include>
        FROM `t_user`
        WHERE id=#{id}
    </select>

    <select id="getUserByWeChat" resultMap="user">
        SELECT
        <include refid="user_columns"></include>
        FROM `t_user`
        WHERE wechat=#{wechat}
    </select>

    <select id="getUserPhone" resultMap="user">
        SELECT
        <include refid="user_columns"></include>
        FROM `t_user`
        WHERE telephone=#{telephone}
    </select>

    <update id="updateDogEndDay" parameterType="com.hades.farm.core.data.dto.requestDto.BuyGoodsRequestDto">
        UPDATE t_user
        SET dog_end_day =
          CASE WHEN dog_end_day IS NULL OR dog_end_day &lt; NOW() THEN DATE_ADD(NOW(),INTERVAL #{num,jdbcType=INTEGER} DAY)
          ELSE DATE_ADD(dog_end_day,INTERVAL #{num,jdbcType=INTEGER} DAY) END,
        update_time = NOW()
        WHERE id = #{userId,jdbcType=BIGINT}
    </update>

    <update id="updateRobotEndDay" parameterType="com.hades.farm.core.data.dto.requestDto.BuyGoodsRequestDto">
        UPDATE t_user
        SET robot_end_day =
        CASE WHEN robot_end_day IS NULL OR robot_end_day &lt; NOW() THEN DATE_ADD(NOW(),INTERVAL #{num,jdbcType=INTEGER} DAY)
        ELSE DATE_ADD(robot_end_day,INTERVAL #{num,jdbcType=INTEGER} DAY) END,
        update_time = NOW()
        WHERE id = #{userId,jdbcType=BIGINT}
    </update>

    <update id="updateGrade">
        UPDATE t_user
        SET grade =#{grade,jdbcType=BIGINT}
        WHERE id = #{userId,jdbcType=BIGINT}
    </update>

    <update id="updatePwd">
        UPDATE t_user
        SET password =#{pwd}
        WHERE id = #{userId,jdbcType=BIGINT}
    </update>

    <update id="updateNameAndImgUrl">
        UPDATE t_user
        SET name =#{name},
       img_url= #{imgUrl}
        WHERE id = #{userId,jdbcType=BIGINT}
    </update>

    <select id="getApprentice" resultMap="user">
        SELECT
        <include refid="user_columns"></include>
        FROM `t_user`
        WHERE id = #{userId,jdbcType=BIGINT}
    </select>

    <select id="getApprenticeCount" resultType="int">
        SELECT
        COALESCE(COUNT(*),0)
        FROM `t_user`
        WHERE id = #{userId,jdbcType=BIGINT}
    </select>

</mapper>