package com.hades.farm.core.data.mapper;

import com.hades.farm.core.data.dto.resultDto.NoticeUserResultDto;
import com.hades.farm.core.data.entity.TNotice;
import org.apache.ibatis.annotations.Param;

import java.util.List;
import java.util.Map;

public interface TNoticeMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_notice
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_notice
     *
     * @mbggenerated
     */
    int insert(TNotice record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_notice
     *
     * @mbggenerated
     */
    int insertSelective(TNotice record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_notice
     *
     * @mbggenerated
     */
    TNotice selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_notice
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(TNotice record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_notice
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(TNotice record);

    /**
     * 获取用户所有通知
     *
     * @param userId
     * @return
     */
    List<TNotice> findNoticeByUserId(@Param("userId") long userId, @Param("offset") int offset, @Param("size") int size);

    /**
     * 获取养殖记录
     *
     * @param userId
     * @param offset
     * @param size
     * @return
     */
    List<TNotice> findBreedNotice(@Param("userId") long userId, @Param("offset") int offset, @Param("size") int size);

    List<TNotice> getNoticeByUserIdOfnum(@Param("userId") Long userId, @Param("num") int num);

    List<NoticeUserResultDto> queryNoticeWithUser(@Param("userId") Long userId, @Param("num") int num);

    int queryByType(Map map);
}