package com.hades.farm.core.data.mapper;

import com.hades.farm.core.data.entity.TAccountIntegral;
import com.hades.farm.core.data.entity.TAccountIntegralFlow;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface TAccountIntegralFlowMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_account_integral_flow
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_account_integral_flow
     *
     * @mbggenerated
     */
    int insert(TAccountIntegralFlow record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_account_integral_flow
     *
     * @mbggenerated
     */
    int insertSelective(TAccountIntegralFlow record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_account_integral_flow
     *
     * @mbggenerated
     */
    TAccountIntegralFlow selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_account_integral_flow
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(TAccountIntegralFlow record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_account_integral_flow
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(TAccountIntegralFlow record);

    /**
     * 获取积分记录
     *
     * @param userId
     * @param offset
     * @param size
     * @return
     */
    List<TAccountIntegralFlow> findAccountRecord(@Param("userId") long userId, @Param("offset") int offset, @Param("size") int size);
}